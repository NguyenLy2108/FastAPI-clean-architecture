version: '3.8'

networks:
  api-network:
  db-network:
  redis-network:
  nginx-network:

services:
  api:
    build: 
      context: .
      dockerfile: Dockerfile    
    env_file:
      - ./src/.env  
    expose:
      - "8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src/app:/code/app
      - ./src/.env:/code/.env
    networks:
      - api-network
      - db-network
      - redis-network
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8000/docs"]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: postgres:13
    env_file:
      - ./src/.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    expose:
      - "5432"
    networks:
      - db-network
      - api-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"] 
      interval: 10s
      timeout: 10s
      retries: 5

  redis:
    image: redis:alpine
    volumes:
      - redis-data:/data
    expose:
      - "6379"
    networks:
      - redis-network
      - api-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
  
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      api:
        condition: service_healthy
    networks:
      - nginx-network
      - api-network

volumes:
  postgres-data:
  redis-data: